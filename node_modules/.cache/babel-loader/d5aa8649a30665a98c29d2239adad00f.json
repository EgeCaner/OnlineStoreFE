{"ast":null,"code":"export const initialState = {\n  basket: [],\n  user: null\n}; // Selector\n\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amount, item) => Number(item.Price) + amount, 0);\n\nconst reducer = (state, action) => {\n  console.log(action);\n\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case \"EMPTY_BASKET\":\n      return { ...state,\n        basket: []\n      };\n\n    case \"REMOVE_FROM_BASKET\":\n      const index = state.basket.findIndex(basketItem => basketItem.ProductID === action.ProductID);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Cant remove product (ProductID: ${action.ProductID}) as its not in basket!`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    case \"SET_USER\":\n      return { ...state,\n        user: action.user\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/volkanerdemli/Desktop/online_project_web_fe/src/reducer.js"],"names":["initialState","basket","user","getBasketTotal","reduce","amount","item","Number","Price","reducer","state","action","console","log","type","index","findIndex","basketItem","ProductID","newBasket","splice","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AAC1BC,EAAAA,MAAM,EAAE,EADkB;AAE1BC,EAAAA,IAAI,EAAE;AAFoB,CAArB,C,CAKP;;AACA,OAAO,MAAMC,cAAc,GAAIF,MAAD,IAC5BA,MAD4B,aAC5BA,MAD4B,uBAC5BA,MAAM,CAAEG,MAAR,CAAe,CAACC,MAAD,EAASC,IAAT,KAAkBC,MAAM,CAACD,IAAI,CAACE,KAAN,CAAN,GAAqBH,MAAtD,EAA8D,CAA9D,CADK;;AAGP,MAAMI,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACE,SAAK,eAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELT,QAAAA,MAAM,EAAE,CAAC,GAAGS,KAAK,CAACT,MAAV,EAAkBU,MAAM,CAACL,IAAzB;AAFH,OAAP;;AAKF,SAAK,cAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELT,QAAAA,MAAM,EAAE;AAFH,OAAP;;AAKF,SAAK,oBAAL;AACE,YAAMc,KAAK,GAAGL,KAAK,CAACT,MAAN,CAAae,SAAb,CACXC,UAAD,IAAgBA,UAAU,CAACC,SAAX,KAAyBP,MAAM,CAACO,SADpC,CAAd;AAGA,UAAIC,SAAS,GAAG,CAAC,GAAGT,KAAK,CAACT,MAAV,CAAhB;;AAEA,UAAIc,KAAK,IAAI,CAAb,EAAgB;AACdI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAwB,CAAxB;AACD,OAFD,MAEO;AACLH,QAAAA,OAAO,CAACS,IAAR,CACG,mCAAkCV,MAAM,CAACO,SAAU,yBADtD;AAGD;;AAED,aAAO,EACL,GAAGR,KADE;AAELT,QAAAA,MAAM,EAAEkB;AAFH,OAAP;;AAKF,SAAK,UAAL;AACE,aAAO,EACL,GAAGT,KADE;AAELR,QAAAA,IAAI,EAAES,MAAM,CAACT;AAFR,OAAP;;AAKF;AACE,aAAOQ,KAAP;AAvCJ;AAyCD,CA3CD;;AA6CA,eAAeD,OAAf","sourcesContent":["export const initialState = {\n  basket: [],\n  user: null,\n}\n\n// Selector\nexport const getBasketTotal = (basket) =>\n  basket?.reduce((amount, item) => Number(item.Price) + amount, 0)\n\nconst reducer = (state, action) => {\n  console.log(action)\n  switch (action.type) {\n    case \"ADD_TO_BASKET\":\n      return {\n        ...state,\n        basket: [...state.basket, action.item],\n      }\n\n    case \"EMPTY_BASKET\":\n      return {\n        ...state,\n        basket: [],\n      }\n\n    case \"REMOVE_FROM_BASKET\":\n      const index = state.basket.findIndex(\n        (basketItem) => basketItem.ProductID === action.ProductID\n      )\n      let newBasket = [...state.basket]\n\n      if (index >= 0) {\n        newBasket.splice(index, 1)\n      } else {\n        console.warn(\n          `Cant remove product (ProductID: ${action.ProductID}) as its not in basket!`\n        )\n      }\n\n      return {\n        ...state,\n        basket: newBasket,\n      }\n\n    case \"SET_USER\":\n      return {\n        ...state,\n        user: action.user,\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default reducer\n"]},"metadata":{},"sourceType":"module"}