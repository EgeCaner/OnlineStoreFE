{"ast":null,"code":"var _jsxFileName = \"/Users/volkanerdemli/Desktop/online_project_web_fe/src/components/ProductResults/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { apiInstance } from \"./../../Utils\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { fetchProductsStart } from \"./../../redux/Products/products.actions\";\nimport Product from \"./Product\";\nimport FormSelect from \"./../forms/FormSelect\";\nimport LoadMore from \"./../LoadMore\";\nimport \"./styles.scss\";\n\nconst mapState = ({\n  productsData\n}) => ({\n  products: productsData.products\n});\n\nconst ProductResults = ({}) => {\n  const [Products, setProducts] = useState([]);\n  useEffect(() => {\n    function componentDidMount() {\n      return apiInstance.get(\"/Product/getall\").then(response => {\n        setProducts(response.data.data);\n        console.log(Products);\n      }).catch(err => console.log(err));\n    }\n\n    componentDidMount();\n  });\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    filterType\n  } = useParams();\n  const {\n    products\n  } = useSelector(mapState);\n  const {\n    data,\n    queryDoc,\n    isLastPage\n  } = products;\n  useEffect(() => {\n    dispatch(fetchProductsStart({\n      filterType\n    }));\n  }, [filterType]);\n\n  const handleFilter = e => {\n    const nextFilter = e.target.value;\n    history.push(`/search/${nextFilter}`);\n  };\n  /* \n  if (!Array.isArray(data)) return null\n  if (data.length < 1) {\n    return (\n      <div className=\"products\">\n        <p>No search results.</p>\n      </div>\n    )\n  } */\n\n\n  const configFilters = {\n    defaultValue: filterType,\n    options: [{\n      name: \"Show all\",\n      value: \"\"\n    }, {\n      name: \"Laptops\",\n      value: \"mens\"\n    }, {\n      name: \"Televisions\",\n      value: \"womens\"\n    }],\n    handleChange: handleFilter\n  };\n\n  const handleLoadMore = () => {\n    dispatch(fetchProductsStart({\n      filterType,\n      startAfterDoc: queryDoc,\n      persistProducts: data\n    }));\n  };\n\n  const configLoadMore = {\n    onLoadMoreEvt: handleLoadMore\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"products\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, \"Browse Products\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Serach ...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FormSelect, Object.assign({}, configFilters, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"productResults\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, Products.map((product, pos) => {\n    const {\n      imageUrl,\n      productName,\n      price\n    } = product;\n    if (!imageUrl || !productName || price === \"undefined\") return null;\n    const configProduct = { ...product\n    };\n    return /*#__PURE__*/React.createElement(Product, Object.assign({\n      key: pos\n    }, configProduct, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 18\n      }\n    }));\n  })), !isLastPage && /*#__PURE__*/React.createElement(LoadMore, Object.assign({}, configLoadMore, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 23\n    }\n  })));\n};\n\nexport default ProductResults;","map":{"version":3,"sources":["/Users/volkanerdemli/Desktop/online_project_web_fe/src/components/ProductResults/index.js"],"names":["React","useState","useEffect","apiInstance","useDispatch","useSelector","useHistory","useParams","fetchProductsStart","Product","FormSelect","LoadMore","mapState","productsData","products","ProductResults","Products","setProducts","componentDidMount","get","then","response","data","console","log","catch","err","dispatch","history","filterType","queryDoc","isLastPage","handleFilter","e","nextFilter","target","value","push","configFilters","defaultValue","options","name","handleChange","handleLoadMore","startAfterDoc","persistProducts","configLoadMore","onLoadMoreEvt","map","product","pos","imageUrl","productName","price","configProduct"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\"\nimport {apiInstance} from \"./../../Utils\"\n\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {useHistory, useParams} from \"react-router-dom\"\nimport {fetchProductsStart} from \"./../../redux/Products/products.actions\"\nimport Product from \"./Product\"\nimport FormSelect from \"./../forms/FormSelect\"\nimport LoadMore from \"./../LoadMore\"\nimport \"./styles.scss\"\n\n\n\nconst mapState = ({productsData}) => ({\n  products: productsData.products,\n})\n\nconst ProductResults = ({}) => {\n  const [Products, setProducts] = useState([])\n\n  useEffect(() => {\n    function componentDidMount() {\n      return apiInstance\n        .get(\"/Product/getall\")\n        .then((response) => {\n          setProducts(response.data.data)\n          console.log(Products)\n        })\n        .catch((err) => console.log(err))\n    }\n    componentDidMount()\n  })\n\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const {filterType} = useParams()\n  const {products} = useSelector(mapState)\n\n  const {data, queryDoc, isLastPage} = products\n\n  useEffect(() => {\n    dispatch(fetchProductsStart({filterType}))\n  }, [filterType])\n\n  const handleFilter = (e) => {\n    const nextFilter = e.target.value\n    history.push(`/search/${nextFilter}`)\n  }\n  /* \n  if (!Array.isArray(data)) return null\n  if (data.length < 1) {\n    return (\n      <div className=\"products\">\n        <p>No search results.</p>\n      </div>\n    )\n  } */\n\n  const configFilters = {\n    defaultValue: filterType,\n    options: [\n      {\n        name: \"Show all\",\n        value: \"\",\n      },\n      {\n        name: \"Laptops\",\n        value: \"mens\",\n      },\n      {\n        name: \"Televisions\",\n        value: \"womens\",\n      },\n    ],\n    handleChange: handleFilter,\n  }\n\n  const handleLoadMore = () => {\n    dispatch(\n      fetchProductsStart({\n        filterType,\n        startAfterDoc: queryDoc,\n        persistProducts: data,\n      })\n    )\n  }\n\n  const configLoadMore = {\n    onLoadMoreEvt: handleLoadMore,\n  }\n\n  return (\n    <div className=\"products\">\n      <h1>Browse Products</h1>\n      <input type = \"text\" placeholder =\"Serach ...\" />\n      <FormSelect {...configFilters} />\n\n      <div className=\"productResults\">\n        {Products.map((product, pos) => {\n          const {imageUrl, productName, price} = product\n          if (!imageUrl || !productName || price === \"undefined\") return null\n\n          const configProduct = {\n            ...product,\n          }\n\n          return <Product key={pos} {...configProduct} />\n        })}\n      </div>\n\n      {!isLastPage && <LoadMore {...configLoadMore} />}\n    </div>\n  )\n}\n\nexport default ProductResults\n"]},"metadata":{},"sourceType":"module"}